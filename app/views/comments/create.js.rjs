unless @comment.new_record?
  page.ef('comments')
    page.insert_html :top, :comments, :partial => 'comments/comment', :locals => { :comment => @comment, :project => @current_project }
  page.esf('activities')    
    page.insert_html :top, :activities, :partial => 'activities/activity', :locals => { :activity => @comment.activity, :project => @current_project }
  page.en

  page << "var switch_upload_link_on_click = $('switch_uploader_link').readAttribute('onClick');"  # store switch uploader link address
  if @task == @target
    unless @task.closed?
      page.replace 'new_comment', new_comment_form(@current_project,@new_comment,:target => @task)
    else
      page.insert_archive_box(@current_project,@task)
      page['new_comment'].remove
    end
    page.update_watching(@current_project,current_user,@task)
    page.update_task_status(@task,:header)
    page.update_task_status(@task,:column)
    page.update_task_assignment(@task,current_user)
  elsif @task_list == @target
    page.update_comment_count(@task_list,:header)
    page.update_comment_count(@task_list,:column)
    page << "Form.reset('new_comment')"
    page.replace 'upload_area', upload_area(@comment)
    page['comment_upload_link'].show
  elsif @conversation == @target
    page.update_comment_count(@conversation,:header)
    page.update_comment_count(@conversation,:column)
    page << "Form.reset('new_comment')"
    page.replace 'upload_area', upload_area(@comment)
    page['comment_upload_link'].show
  else
    page << "Form.reset('new_comment')" 
    page.replace 'upload_area', upload_area(@comment)
    page['comment_upload_link'].show  
  end
  page << "$('switch_uploader_link').writeAttribute('onClick', switch_upload_link_on_click);"      # restore switch uploader link address
  
  page.reload_javascript_events

end

page["comment_#{@comment.id}"].visual_effect :highlight, :duration => 2
