- remote_form_for form_url, :id => 'new_comment_form' do |f|
  = hidden_field_tag :original_controller, controller_name
  = hidden_field_tag :basic_uploader, params[:basic_uploader]
  .body.text_area
    - comment.body = params[:comment_body] if params[:comment_body]
    = f.text_area :body, :class => 'comment_body'
  .extra
    - if comment.project
      = the_comment_upload_link(comment, :hide => params[:show_upload_form])
      = upload_area(comment)
    - if target
      - if target.is_a? Task
        - unless f.object.status == 0
          .statuses
            = f.label :status
            .status.open
              = f.radio_button :status, 1 # open
              = t('tasks.status.open')
            .status.hold
              = f.radio_button :status, 2 # hold
              = t('tasks.status.hold')
            .status.resolved
              = f.radio_button :status, 3 # resoloved
              = t('tasks.status.resolved')
            .status.rejected
              = f.radio_button :status, 4 # rejected
              = t('tasks.status.rejected')
            = javascript_tag "$$('.statuses input').each(function(e){ if (e.checked) { e.up('.status').addClassName('active') }; })"
            = javascript_tag "Comment.watch_status();"
        - f.fields_for :target, target do |task_form|
          .assigned.select
            = task_form.label :assigned_id, t('.assigned_to')
            = task_form.select :assigned_id, options_for_people(comment.project.people)
    .submit
      = f.submit t('.submit')
    .clear

= javascript_tag "if (typeof(Prototype) != 'undefined')  $('new_comment').auto_focus()"